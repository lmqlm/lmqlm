
/**
共用變數
**/
var result = new Object();
var IsCanDoEdit = "1";

/**
設定 Grid 元件為勾選或不勾選
@param	GridID		GridID
@param	checked		勾選  是 = true 否 = false
*/
function setGridChk(GridID, checked) {
    //$("#" + GridID + " input[type=checkbox]").prop("checked", checked);
    $("[id$=" + GridID + "]").find("input[type=checkbox]").not("[disabled]").prop("checked", checked);
}

function barrierFreeForIndexPage() {

    //for 無障礙 banner左右切換要有title
    $('.prev').attr('title', '往左切換');
    $('.next').attr('title', '往右切換');


    //重新定義tab順序，以符合無障礙
    $(".logoAndNav").find("a").attr("tabindex", "1");
    $(".ctrl").find("a").attr("tabindex", "1");
    $(".nav").find("a").attr("tabindex", "1");
    $("#gsc-i-id1").attr("tabindex", "1");
    $(".gsc-search-button-v2").attr("tabindex", "1");
    $(".kv").find("a").attr("tabindex", "2");
    $("#datepicker").find("a").attr("tabindex", "3");
    $(".peopleBlock").find("a").attr("tabindex", "8");
    $(".company").find("a").attr("tabindex", "9");
    $(".videoBlock").find("a").attr("tabindex", "10");
    $(".other").find("a").attr("tabindex", "11");
    $(".footerNav").find("a").attr("tabindex", "12");
}

function bindDatePickerChangeMonthEven() {

    $(".ui-datepicker-prev,.ui-datepicker-next").on('keyup', function (e) {
        if (e.keyCode === 13) {
            $("#dateMonthChange").val(this.classList[0]);
            $(this).click();
        };
    });

}

//首頁最新消息頁籤切換功能
function initNewsTab() {
    let newsTag = $('.newsTag').find('li'),
        num = 0;

    newsTag.on('click', function () {
        num = $(this).index();
        $("input[id$=TabIndex]").val(num);
        $(this).addClass('current').siblings().removeClass('current');
        $('.bbb').eq(num).css({
            "display": "block"
        }).siblings().css({
            "display": "none"
        })
    });

    newsTag.on('keyup', function (e) {
        if (e.keyCode === 13) {
            $(this).click();
        };
    });
}


var timer;
var intervalId;
var timeSec;
function setMemberTimeOut() {
    //if (timer != undefined) {
    //     clearTimeout(timer);
    //}
    var prgCd = $("#PageLeftMenu1_MENU_PRG_CD").val()
    $("body").append("<a id=\"memberTimeOut\" style=\"display: none\" href=\"/Apps/Openwin/OPENWIN_RELOGIN.aspx?Tp=" + prgCd + "\">開窗-重新登入</a>");

    $("a[id=memberTimeOut]").fancybox({
        'width': '400',
        'height': '450',
        'type': 'iframe',
        'scrolling': 'no',
        'modal': true,
        'enableEscapeButton' : false,
        'fitToView': false,
        'live': false,
        'iframe': { 'preload': false, 'scrolling': 'no' }
        , 'helpers': {
            title: null
        }, afterClose: function () {
            setMemberTimeOut();
        }
    });

    timeSec = 1200;
    //timer = setTimeout(setLogOutTimer, 1200000);

    if (intervalId != undefined) {
        clearInterval(intervalId);
    }

    intervalId = setInterval(function () {
        timeSec = timeSec - 1;
        if (timeSec > 0) {
            var min = parseInt(timeSec / 60);
            var sec = timeSec % 60;
            $("#logoutTime").html('登出倒數：' + min + '分' + sec + '秒');
        } else {
            $("#logoutTime").html('登出倒數：0分0秒');
            setLogOutTimer();
        }
       
    }, 1000);
}

function setLogOutTimer() {
    if (intervalId != undefined) {
        clearInterval(intervalId);
    }

    //如果當下處於開窗畫面則將重新登入的fancybox開在開窗內 避免重新登入後原本的開窗消失
    if ($.fancybox.isActive) {
        $("a[id=memberFrameTimeOut]").fancybox({
            'width': '400',
            'height': '350',
            'type': 'iframe',
            'scrolling': 'no',
            'modal': true,
            'enableEscapeButton': false,
            'fitToView': false,
            'live': false,
            'iframe': { 'preload': false, 'scrolling': 'no' }
        , 'helpers': {
            title: null
        }
        });
        $("a[id=memberFrameTimeOut]").trigger('click');
    } else {
        $("a[id=memberTimeOut]").trigger('click');
    }
    
}

function initDatePicker(id){
    $('input[id$=' + id + "]").datepicker({
        inline: true,
        showOtherMonths: true,
        dayNamesMin: ['日', '一', '二', '三', '四', '五', '六']
                , dateFormat: "yymmdd"
                , onSelect: function (dateText, inst) {
                    var dateFormate = inst.settings.dateFormat == null ? "yy/mm/dd" : inst.settings.dateFormat; //取出格式文字
                    var reM = /m+/g;
                    var reD = /d+/g;
                    var objDate = {
                        y: inst.selectedYear - 1911 < 0 ? inst.selectedYear : inst.selectedYear - 1911,
                        m: String(inst.selectedMonth + 1).length != 1 ? inst.selectedMonth + 1 : "0" + String(inst.selectedMonth + 1),
                        d: String(inst.selectedDay).length != 1 ? inst.selectedDay : "0" + String(inst.selectedDay)
                    };
                    $.each(objDate, function (k, v) {
                        var re = new RegExp(k + "+");
                        dateFormate = dateFormate.replace(re, v);
                    });
                    inst.input.val(dateFormate);
        },
        monthNames: ['一月', '二月', '三月', '四月', '五月', '六月',
            '七月', '八月', '九月', '十月', '十一月', '十二月'],
        monthNamesShort: ['一月', '二月', '三月', '四月', '五月', '六月',
            '七月', '八月', '九月', '十月', '十一月', '十二月']
    });
}


(function ($) {
    if ($.datepicker != undefined) {
        var old_generateMonthYearHeader = $.datepicker._generateMonthYearHeader;

        $.extend($.datepicker, {
            formatDate: function (format, date, settings) {
                var d = date.getDate();
                var m = date.getMonth() + 1;
                var y = date.getFullYear();
                var fm = function (v) {
                    return (v < 10 ? '0' : '') + v;
                };
                var fy = function (v) {
                    return (v < 100 ? '0' : '') + v;
                };
                return fy((y - 1911)) + '' + fm(m) + '' + fm(d);
            },
            parseDate: function (format, value, settings) {
                var v = new String(value);
                var Y, M, D;
                if (v.length == 7) {/*1001215*/
                    Y = v.substring(0, 3) - 0 + 1911;
                    M = v.substring(3, 5) - 0 - 1;
                    D = v.substring(5, 7) - 0;
                    return (new Date(Y, M, D));
                } else if (v.length == 6) {/*981215*/
                    Y = v.substring(0, 2) - 0 + 1911;
                    M = v.substring(2, 4) - 0 - 1;
                    D = v.substring(4, 6) - 0;
                    return (new Date(Y, M, D));
                }
                return (new Date());
            },
            formatYear: function (v) {
                return '民國' + (v - 1911) + '年';
            },
            _generateMonthYearHeader: function (a, b, c, d, e, f, g, h) {
                var htmlYearMonth = old_generateMonthYearHeader.apply(this, [a, b, c, d, e, f, g, h]);
                if ($(htmlYearMonth).find(".ui-datepicker-year").length > 0) {
                    htmlYearMonth = $(htmlYearMonth).find(".ui-datepicker-year").text('民國' + (Number(c) - 1911) + '年').end().get(0).outerHTML;
                }
                return htmlYearMonth;
            }
        });
    }




})(jQuery);


function initFbApi() {
    window.fbAsyncInit = function () {
        FB.init({
            appId: '1493698970869787',
            xfbml: true,
            version: 'v3.0'
        });
    };

    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) { return; }
        js = d.createElement(s); js.id = id;
        js.src = "https://connect.facebook.net/zh_TW/sdk.js";

        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
}


//下載檔案
function downLoadFileWithName(url, fileNeme, hiddenUrl, hiddenFileName, linkId) {
    $("input[id$=" + hiddenUrl + "]").val(url);
    $("input[id$=" + hiddenFileName + "]").val(fileNeme);
    __doPostBack(linkId,'');
}

function getSportTypeImage(sportType) {
    var baseUrl = "";
    switch (sportType) {
        case "A":
            baseUrl += "basketball.png";
            break;
        case "B":
            baseUrl += "Badminton.png";
            break;
        case "C":
            baseUrl += "tabletennis.png";
            break;
        case "D":
            baseUrl += "softball.png";
            break;
        case "E":
            baseUrl += "football.png";
            break;
        case "F":
            baseUrl += "tennis.png";
            break;
        case "G":
            baseUrl += "otherBall.png";
            break;
        case "H":
            baseUrl += "Paternity.png";
            break;
        case "I":
            baseUrl += "Disability.png";
            break;
        case "J":
            baseUrl += "Aboriginal.png";
            break;
        case "J":
            baseUrl += "Aboriginal.png";
            break;
        case "K":
            baseUrl += "old.png";
            break;
        case "L":
            baseUrl += "swin.png";
            break;
        case "M":
            baseUrl += "bicycle.png";
            break;
        case "N":
            baseUrl += "run.png";
            break;
        case "O":
            baseUrl += "Climb.png";
            break;
        case "P":
            baseUrl += "boxing.png";
            break;
        case "Q":
            baseUrl += "dancing.png";
            break;
        case "R":
            baseUrl += "entertainment.png";
            break;
        case "S":
            baseUrl += "Fitness.png";
            break;
        case "T":
            baseUrl += "otherS.png";
            break;
    }
    return baseUrl;
}

function initCkeditor(editorId) {

    if (CKEDITOR.instances[editorId] != undefined) {
        CKEDITOR.instances[editorId].destroy();
    }

    CKEDITOR.replace(editorId,
        {
            skin: 'moono',
            image_previewText: ' ',
            filebrowserBrowseUrl: '',
            filebrowserImageBrowseUrl: '/Resources/js/ckeditor/ckfinder/ckfinder.html?type=Images',
            filebrowserUploadUrl: '',
            filebrowserImageUploadUrl: '/Resources/js/ckeditor/ckfinder/core/connector/aspx/connector.aspx?command=QuickUpload&type=ImagesUpload',
            removeDialogTabs: 'image:advanced;image:Link;link:upload;link:advanced'
            ,font_names: 'Arial/Arial, Helvetica, sans-serif;Comic Sans MS/Comic Sans MS, cursive;Courier New/Courier New, Courier, monospace;Georgia/Georgia, serif;Lucida Sans Unicode/Lucida Sans Unicode, Lucida Grande, sans-serif;Tahoma/Tahoma, Geneva, sans-serif;Times New Roman/Times New Roman, Times, serif;Trebuchet MS/Trebuchet MS, Helvetica, sans-serif;Verdana/Verdana, Geneva, sans-serif;新細明體;標楷體;微軟正黑體'
        });
}
// 顯示處理中
function showProcess() {
    $.blockUI({ message: '處理中...' });
}

//開啟圖片
function OpenImg(imgId, url) {
    $("a[id$=" + imgId + "]").attr('href', url);
    $("a[id$=" + imgId + "]").trigger('click');
}

//初始化圖片開窗
function InitImg(imgId) {
    $("a[id$=" + imgId + "]").fancybox({
        'width': '70%',
        'height': '70%',
        'type': 'iframe',
        'fitToView': false,
        'live': false,
        'iframe': { 'preload': false }
        ,'helpers': {
        title: null
        }
    });
}

//初始化圖片開窗
function InitPdf(imgId) {
    $("a[id$=" + imgId + "]").fancybox({
        'width': '80%',
        'height': '80%',
        'type': 'iframe',
        'scrolling': 'no',
        'fitToView': false,
        'live': false,
        'iframe': { 'preload': false, 'scrolling': 'no' }
        , 'helpers': {
            title: null
        }
    });
}

function initTabIndex(tabPanelId, tabId, tabContentId, maxTabNum, tabIndexId) {
    var tabIndex = $("#" + tabIndexId).val();
    if (tabIndex == "" || tabIndex == undefined) {
        tabIndex = 1;
    }

    var TabbedPanels1 = new Spry.Widget.TabbedPanels(tabPanelId);
    for (var i = 1; i <= maxTabNum ; i++) {
        if (i == tabIndex) {
            $("#" + tabId + '' + i).attr("class", "TabbedPanelsTab TabbedPanelsTabSelected");
            $("#" + tabContentId + '' + i).attr("class", "TabbedPanelsContent ");
            $("#" + tabContentId + '' + i).attr("style", "display:block ");

        } else {

            $("#" + tabId + i).attr("class", "TabbedPanelsTab");
            $("#" + tabContentId + i).attr("class", "TabbedPanelsContent TabbedPanelsContentVisible");
            $("#" + tabContentId + i).attr("style", "display:none ");
        }
    }

}



function setTabIndex(index,tabIndexId) {
    if (tabIndexId == undefined) {
        tabIndexId = 'TabIndex';
    }
    $("input[id$=" + tabIndexId + "]").val(index);
}

function swichStep(index, tabIndexId, hide) {
    if (tabIndexId == undefined) {
        tabIndexId = 'TabIndex';
    }

    if (index != undefined) {
        index = parseInt(index);
    }

    //預設不隱藏其他非選中頁籤
    if (hide == undefined) {
        hide = false;
    }

    setTabIndex(index, tabIndexId);
    reloadTab(index, hide);
    //將畫面捲動到最上方
    $('html, body').animate({ scrollTop: 0 }, 'fast')
}

function reloadTab(tabIndex, hide) {
    //預設不隱藏其他非選中頁籤
    if (hide == undefined) {
        hide = false;
    }

    //處理頁籤標題
    $('ul[class=tag]').find('li').find('a').removeClass("current");
    $($('ul[class=tag]').find('li').find('a').get(tabIndex)).addClass("current");
    //處理內文
    $('div[class=block]').find('div[class=box]').css("display", "none")
    $($('div[class=block]').find('div[class=box]').get(tabIndex)).css({ 'display': 'block' })
}

function switchTab(tabIndexId, auto, hide) {
    var tabIndex = $("input[id$=" + tabIndexId + "]").val();

    if (tabIndex == "" || tabIndex == undefined) {
        tabIndex = 0;
    }

    //預設可切換
    if (auto == undefined) {
        auto = true;
    }
    
    //預設不隱藏其他非選中頁籤
    if (hide == undefined) {
        hide = false;
    }

    //避免POST BACK後頁籤跳掉
    reloadTab(tabIndex, hide);
    
    //bind 頁籤切換功能  false則程式自行手動切換
    if (auto) {
        let tag = $('.tag').find('a'),
            tagIndex = 0;

        tag.on('click', function () {
            tagIndex = $(this).parent().index();
            setTabIndex(tagIndex,tabIndexId);
            $('.box').eq(tagIndex).css({ "display": "block" }).siblings().css({ "display": "none" });
            $(this).addClass('current').parent().siblings().find('a').removeClass();
            // return false;
        });
    }
}

//用api的方式建立googleMap
function initializeGoogleMap(mapId,lat,lng) {
    //設定要顯示的控制項
    var directionsDisplay2 = new google.maps.DirectionsRenderer;
    var directionsService2 = new google.maps.DirectionsService;
    var latLong = { lat: parseFloat(lat), lng: parseFloat(lng) };
    var map = new google.maps.Map(document.getElementById(mapId), {
        zoom: 17,
        center: latLong
    });
    directionsDisplay2.setMap(map);

    var marker = new google.maps.Marker({
        position: latLong,
        map: map
    });

}



function validateFormBlockNull(block) {
    var msg = CheckInput.validBlockNull(block);

    if (msg.length > 0) {
        alert(msg);
        return false;
    }
    return true;
}


//下載檔案
function downLoadFile(url, hiddenId, linkId) {
    $("input[id$=" + hiddenId + "]").val(url);
    __doPostBack(linkId, "");

}

// 關閉處理中
function hideProcess() {
    $.unblockUI();
}

//取得附件檔名
function getFileName(target, value) {
    var path = value;
    var startIndex = path.lastIndexOf("\\");
    var lastIndex = path.lastIndexOf(".");
    var fileName = path.substring(startIndex + 1, lastIndex);
    $("#" + target).val(fileName);
}

/** 取消功能時呼叫 */
function doCloseMode(div_name) {
    $('#' + div_name).css('display', 'none');
}

function urlOpenWindos(url) {
    window.open(url);
}

/** 新增功能時呼叫 */
function doAdd1_2(keyStr) {
    if (IsCanDoEdit == "0") {
        alert("無編輯權限，不可執行");
        return false;
    }

    var argusNameAry = ["Mode"];
    var argusValueAry = ["ADD"];

    if (keyStr != null) {
        var keyAry = keyStr.split("|");
        for (var i = 0; i < keyAry.length; i += 2) {
            argusNameAry[argusNameAry.length] = keyAry[i];
            argusValueAry[argusValueAry.length] = keyAry[i + 1];
        }
    }
    top.rowKey = null;

    //=== 呼叫新增 ===
    sendData(viewpage, "viewFrame", argusNameAry, argusValueAry);

    //=== 開啟新增 Frame ===
    showView();
}

/** 新增功能時呼叫 */
function doAdd1_3(keyStr,toPage) {
    if (IsCanDoEdit == "0") {
        alert("無編輯權限，不可執行");
        return false;
    }

    var argusNameAry = ["Mode"];
    var argusValueAry = ["ADD"];

    if (keyStr != null) {
        var keyAry = keyStr.split("|");
        for (var i = 0; i < keyAry.length; i += 2) {
            argusNameAry[argusNameAry.length] = keyAry[i];
            argusValueAry[argusValueAry.length] = keyAry[i + 1];
        }
    }
    top.rowKey = null;

    //=== 呼叫新增 ===
    sendData(toPage, "viewFrame", argusNameAry, argusValueAry);

    //=== 開啟新增 Frame ===
    showView();
}

/** 傳送資料, 透過 Form Post */
function sendData(url, target, argusNameAry, argusValueAry) {
    var formObj = document.createElement("form");
    formObj.name = "TMP_FORM";
    document.body.appendChild(formObj)
    formObj.style.display = 'none';
    var tObj;
    for (var i = 0; i < argusNameAry.length; i++) {
        tObj = document.createElement("INPUT");
        tObj.name = argusNameAry[i];
        tObj.value = argusValueAry[i];
        formObj.appendChild(tObj);
    }

    formObj.action = url;
    if (target != null)
        formObj.target = target;
    formObj.method = "POST";
    formObj.submit();

    document.body.removeChild(formObj);
}

/** 顯示 viewFrame 頁面 */
function showView() {
    //top.document.getElementById("pageFrame").cols	=	"0,*";
    $('#pageFrame', top.document).attr({ 'cols': '0,*' });
}

/** 隱藏 viewFrame 頁面 */
function hideView() {
    //top.document.getElementById("pageFrame").cols	=	"*,0";
    $('#pageFrame', top.document).attr({ 'cols': '*,0' });
}

/** 回查詢頁 */
function doBack() {
    //=== 若查詢過才呼叫查詢 Frame 重新 bindgrid ===
    if (chkHasQuery()) {
        parent.mainFrame.reQuery();
    }

    self.location.href = 'about:blank';

    //=== 關閉新增 Frame ===
    hideView();
}

function doBackUrl(url) {
    hideView();
    top.mainFrame.location.href = url;
}

/*
判斷是否查詢過
**/
function chkHasQuery() {
    if (parent.mainFrame._("DataGrid").rows != null || parent.mainFrame.$(".GridNoData").length > 0)
        return true;
}

function _() {
    var result = new Array();
    for (var i = 0; i < arguments.length; i++)
        result[i] = ($('#' + arguments[i]).length == 1) ? $('#' + arguments[i])[0] : $('#' + arguments[i]);
    if (arguments.length == 1)
        return result[0];
    else
        return result;
}

/**
處理查詢動作
*/
function reQuery() {
    __doPostBack('ReQuery', '');
}

/*
AjaxErrorHandle
*/
function EndRequestHandler(sender, args) {
    //放這裡會導致openSucess無法顯示
    //hideProcess();

    if (args.get_error() != undefined) {
        var errorMessage;
        if (args.get_response().get_statusCode() == '200') {
            if (args.get_error().message.indexOf('alert') != -1)
                alert("具有潛在危險的值已從用戶端偵測到!!");
            else
                errorMessage = args.get_error().message;
        }

        hideProcess();

        args.set_errorHandled(true);

        PageMethods.AjaxError(onSucceeded, onFailed);
    }
    page_init();
}

function onSucceeded(result, userContext, methodName) {
    eval(result);
}

function onFailed(error, userContext, methodName) {
    if (error !== null) {
        alert('An error occurred: ' + error.get_message());
    };
}

/*
刪除資料時確認
*/
function ConfirmDelete(GridID, ConfirmMsg) {
    if (IsCanDoEdit == "0") {
        alert("無編輯權限，不可執行");
        return false;
    }
    var obj =  $("[id$=" + GridID + "]").find("input[type=checkbox]");
    var chk;
    var cnt = 0;
    for (i = 0; i < obj.length; i++) {
        chk = obj[i];
        if (chk.checked == true) {
            cnt += 1;
        }
    }

    if (cnt == 0) {
        alert("請勾選資料!!")
        return false;
    } else {
        if (ConfirmMsg == null) {
            ConfirmMsg = "是否確定要刪除所勾選的 " + cnt + " 筆資料？";
        }
        if (confirm(ConfirmMsg)) {
            return true;
        }
    }

    return false;
}

/*
檢查CheckBox有沒有勾選
*/
function ConfirmdChk(GridID) {
    var obj = $("#" + GridID + " input[type=checkbox]");
    var chk;
    var cnt = 0;
    for (i = 0; i < obj.length; i++) {
        chk = obj[i];
        if (chk.checked == true) {
            cnt += 1;
        }
    }
    if (cnt == 0) {
        alert("請勾選資料!!")
        return false;
    }
    return true;
}

/*
刪除資料時確認
*/
function doDelete() {
    if (IsCanDoEdit == "0") {
        alert("無編輯權限，不可執行");
        return false;
    }
    if (confirm('是否確定要刪除此筆資料？')) {
        return true;
    }
    return false;
}

/*
送出按鈕時確認訊息
*/
function ConfirmClick(msg) {
    if (confirm(msg)) {
        return true;
    }
    return false;
}


/**
按下編輯時呼叫
@param	keyStr	參數 KEY|VALUE
@param	typw	處理種類 Mod - 編, Detail - 詳
*/
var last_KetStr;
function doEdit1_2(viewpage, keyStr, type) {
    if (keyStr == null) {
        keyStr = last_KetStr;
        type = "MOD";
    }
    else {
        last_KetStr = keyStr;
    }

    var argusNameAry = ["Mode"];
    var argusValueAry = [type.toUpperCase()];

    var keyAry = keyStr.split("|");
    for (var i = 0; i < keyAry.length; i += 2) {
        argusNameAry[argusNameAry.length] = keyAry[i];
        argusValueAry[argusValueAry.length] = keyAry[i + 1];
    }

    sendData(viewpage, "viewFrame", argusNameAry, argusValueAry);

    //=== 開啟新增 Frame ===
    showView();
}

function _i(formName, inputName) {
    return document.forms[formName].elements[inputName];
}

//### PageScript ###
/**
分頁使用
@param pageNoId		分頁編號 Client ID
@param pageNum		目前處理頁次
@param validFunctionName檢核 Function 名稱
@param postBackName	PostBast 控制項名稱
*/
function gotoPage(pageNoId, pageNum, postBackName) {

    $("#" + pageNoId).val(pageNum);

    __doPostBack(postBackName, '');
}

/**
Grid 按下改變顏色事件
*/
function clickEditRow(linkObj, key) {
    var tr = linkObj.parentNode.parentNode;
    //top.rowKey	=	tr.parentNode.parentNode.id + "," + $(tr).attr('KEY');
    tr.className = top._scrollClickClassName;
    showProcess();
}

/** 開啟 Detail 頁面 */
function doOpen(keyStr, width, height, pageName) {
    var height_ = screen.availHeight - 20;
    var width_ = screen.availWidth - 10;

    width = (width == null) ? width_ : width;
    height = (height == null) ? height_ : height;

    //=== 將 Key 組在 URL 後面帶入 ===
    var keyAry = keyStr.split("|");
    var keyUrlBuff = new StringBuffer();

    for (var i = 0; i < keyAry.length; i += 2) {
        if (i == 0)
            keyUrlBuff.append("?" + keyAry[i] + "=" + StrUtil.urlEncode(keyAry[i + 1]));
        else
            keyUrlBuff.append("&" + keyAry[i] + "=" + StrUtil.urlEncode(keyAry[i + 1]));
    }

    //=== 2006/12/4 解決傳空字串有 Bug 的問題 ===
    var openUrl = "";
    if (keyStr == '')
        openUrl = _vp + "mainframe_open.aspx?mainPage=" + StrUtil.urlEncode(pageName);
    else
        openUrl = _vp + "mainframe_open.aspx?mainPage=" + StrUtil.urlEncode(pageName) + "&keyParam=" + StrUtil.urlEncode(keyUrlBuff.toString());

    WindowUtil.openObjDialog(openUrl, width, height, self);
}

/* 變數是否設定
 ex: isset( 'Kevin van Zonneveld' ); */
function isset() {
    var a = arguments,
        l = a.length, i = 0,
        undef;

    if (l === 0) {
        throw new Error('Empty isset');
    }

    while (i !== l) {
        if (a[i] === undef || a[i] === null) {
            return false;
        }
        i++;
    }
    return true;
}

function showHideQtable() {
    try { _("QTable1").style.display = (_("QTable1").style.display == 'none') ? "" : "none"; } catch (ex) { };
    try { _("QTable2").style.display = (_("QTable2").style.display == 'none') ? "" : "none"; } catch (ex) { };
}

/** 查詢功能時呼叫 */
function doQuery() {
    var msg = CheckInput.validBlockNull("Q_");

    if (msg.length > 0) {
        alert(msg);
        return false;
    }

    showProcess();
    return true;
}

/** 存檔功能時呼叫 */
function doSave(block) {
    if (IsCanDoEdit == "0") {
        alert("無編輯權限，不可執行");
        return false;
    }
    var msg = CheckInput.validBlockNull(block);

    if (msg.length > 0) {
        alert(msg);
        return false;
    }

    showProcess();
    return true;
}

function gridviewScroll(DataGridID) {
    if (isset(DataGridID) == false) {
        DataGridID = "DataGrid";
    }

    var gridWidth = $(window).width();
    var gridHeight = $(window).height();
    gridWidth = gridWidth - 60;
    gridHeight = gridHeight - 210;
    $('#' + DataGridID).gridviewScroll({
        width: gridWidth,
        height: gridHeight,
        startHorizontal: 0,
        wheelstep: 10,
        barhovercolor: "#3399FF",
        barcolor: "#3399FF"
    });
}

///處理無障礙  input type button無法觸發onkeypress
function previousPage(value) {
    if (event.keyCode === 13) {
        $(value).click();
    }
}

var openMapHref = "";
var openVideoHref = "";
function openMap(lat, lng) {
    $("#openWinMap").attr('href', openMapHref + "?lat=" + lat + "&lng=" + lng);
    $("#openWinMap").trigger('click');
}

//googleMap開窗
function initFancybox(imgId) {
    $("a[id$=" + imgId + "]").fancybox({
        'width': '70%',
        'height': '500px',
        'type': 'iframe',
        'fitToView': false,
        'live': false,
        'iframe': { 'preload': false }
        , 'helpers': {
            title: null
        }
    });
}

function page_init_start() {
    //切換語系
    //swichLocalization();
    initFancybox("openWinMap");
    initFancybox("openWinVideo");
    openMapHref = $('#openWinMap').attr("href"); 
    openVideoHref = $('#openWinVideo').attr("href"); 

    $(".toggle").click(function () {
        $(".navs").slideToggle();
    });

    //教學影片收合功能
    $('.close').on('click', function () {
        $('.hideShow').stop().slideToggle(400);
        //return false;
    });


    //避免按enter觸發submit
    document.onkeydown = function () {
        if (window.event) {
            if (event.keyCode == 13 && event.srcElement.nodeName != "A" && event.srcElement.nodeName != "TEXTAREA" && event.srcElement.type != "submit") {
                event.keyCode = 9;
                return false;
            }

        }
    }

    //根據每個功能結點更改瀏覽器標題
    if ($('h2').length == 1) {
        var text = $('h2')[0].innerText;
        var index = text.indexOf("\n");
        if (index != -1) {
            text = text.substr(0, index);
        }
        setWebTitle(text);
    }
}

function setWebTitle(text) {
    var title = $('title:first').text();
    $('title:first').text(title + '-' + text);
}

//處理無障礙空間
function formateCkeditHtml() {
    //處理圖片的title
    $('div[id=ckeditBody]').find('img').each(function () {
        if ($(this).attr('alt') != "" && $(this).attr('alt') != undefined) {
            $(this).attr('title', $(this).attr('alt'))
        } else {
            $(this).attr('title', '文章示意圖')
        }
    });

    //因為Ckedit5 table會包在figure裡面，故如果figure存在則將class設在figure，沒有才設在table上
    //處理table的class
    $('div[id=ckeditBody]').find('table').each(function () {
        var parent = $(this).parent()[0].tagName;
        if (parent == "FIGURE") {
            $(this).parent().attr("class", "ckTable");
        } else {
            $(this).attr("class", "ckTable");
        }
    });
    //如果th 有使用到colspan或rowspan則需要設定scope屬性
    $('div[id=ckeditBody]').find('th').filter('[colspan]').attr("scope", "col");

    //處理超連結的title
    $('div[id=ckeditBody]').find('a').each(function () {
        var text = $(this).text();
        if ($(this).attr('target') == "_blank") {
            $(this).attr('title', '另開視窗-' + text)
        } else {
            $(this).attr('title', '超連結-' + text)
        }
    });
}


/**
 處理列印動作
 @param	gridID		GridID
 @param	checkBoxName	要核選的 名稱
 @param	exportType	匯出種類, CHECK 表示多筆刪除
 */
function doPrint(gridID, checkBoxName, printType) {
    var checkCount = 0;

    if (printType == "CHECK") {
        checkCount = getGridCheckCount(gridID, checkBoxName)

        if (checkCount == 0) {
            alert("請勾選資料!!");
            return false;
        }
    }

    var formObj;
    var printWin;
    var printTarget = "Print" + (new Date()).getTime();
    printWin = WindowUtil.openPrintWindow("", printTarget);

    if (printType == 'CHECK') {
        printpage = StrUtil.setPageArgument(printpage, "TYPE", "PRINT");
        formObj = createTmpForm(gridID, checkBoxName);
    } else {
        printpage = StrUtil.setPageArgument(printpage, "TYPE", "PRINT_ALL");
        formObj = createTmpForm('', '');
    }

    Form.doSubmit(1, printpage, "post", printTarget);
    _d().body.removeChild(formObj);
    printWin.focus();
}

/**
處理匯出動作
@param	gridID		GridID
@param	checkBoxName	要核選的 名稱
@param	exportType	匯出種類, CHECK 表示多筆刪除
*/
function doExport(gridID, checkBoxName, exportType) {
    //=== 減核錯誤處理 ===
    var msg = CheckInput.validBlockNull("Q_");

    if (msg.length > 0) {
        alert(msg);
        return false;
    }

    var checkCount = 0;

    if (exportType == "CHECK") {
        checkCount = getGridCheckCount(gridID, checkBoxName)

        if (checkCount == 0) {
            //必須選擇資料再進行處理
            alert("請勾選資料!!")
            return false;
        }
    }
    return true;
}

/**
處理匯出動作
@param	gridID		GridID
@param	checkBoxName	要核選的 名稱
@param	exportType	匯出種類, CHECK 表示多筆刪除
*/
function doExportByProcess(gridID, checkBoxName, exportType) {
    //=== 減核錯誤處理 ===
    var msg = CheckInput.validBlockNull("Q_");

    if (msg.length > 0) {
        alert(msg);
        return false;
    }

    var checkCount = 0;

    if (exportType == "CHECK") {
        checkCount = getGridCheckCount(gridID, checkBoxName)

        if (checkCount == 0) {
            //必須選擇資料再進行處理
            alert("請勾選資料!!")
            return false;
        }
    }
    showProcess();
    return true;
}

/**
彈出輸入密碼視窗後做處理匯出動作
*/
function doExportByPassword(doPostBackName, isProcess) {
    var msg = CheckInput.validBlockNull("Q_");

    if (msg.length > 0) {
        alert(msg);
        return false;
    }
    if ($('#EXCEL_PASSWORD').val() == undefined)
        return false;
    // dialog已開啟
    if ($('div[name=passwordDialog]').html() != undefined) {
        $('div[name=passwordDialog]').dialog("open");
        return false;
    }

    var html =
        '<div name="passwordDialog" title="請輸入EXCEL密碼">' +
        '<input id="EXCEL_PASSWORD_TEMP" type="password" size="25" onblur="CheckInput.CheckEngInt(this);"/>' +
        '</div>';

    $(html).dialog({
        autoOpen: true,                // 自動開啟
        //position:["center","bottom"], // 顯示位置
        draggable: false,               // 可拖拉
        modal: true,                    // 鎖背景
        hide: "fade",                   // 關閉效果
        // blind, bounce, clip, drop, explode, fade, fold, highlight, pulsate, puff, slide, scale, size, shake, transfer
        // 盲目的，彈跳，剪輯，滴，爆炸，淡入淡出，折，亮點，跳動，粉撲，幻燈片，規模，大小，搖，移
        closeOnEscape: true,            // ESC關閉功能
        buttons: {                      // 功能按鈕
            "清除": function () {
                $('#EXCEL_PASSWORD_TEMP').val('');
                //$(this).dialog("close");
            },
            "確定": function () {
                if ($('#EXCEL_PASSWORD_TEMP').val() == "") {
                    alert('請輸入密碼');
                    return;
                } else {
                    $('#EXCEL_PASSWORD').val($('#EXCEL_PASSWORD_TEMP').val());
                    __doPostBack(doPostBackName, '');
                    $(this).dialog("close");
                    if (isProcess == undefined || isProcess)
                        showProcess();
                }
            },
            "取消": function () {
                $('#EXCEL_PASSWORD_TEMP').val('');
                $(this).dialog("close");
            }
        },
        open: function (event, ui) {
            $(".ui-dialog-titlebar-close").hide();
            //$('#EXCEL_PASSWORD').val('0000');
            //__doPostBack(doPostBackName, '');
            //$(this).dialog("close");
        },
        close: function () {
            $('#EXCEL_PASSWORD_TEMP').val('');
        }
    });
    return false;
}